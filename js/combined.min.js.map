{"version":3,"sources":["combined.min.js"],"names":["r","e","n","t","o","i","f","c","require","u","a","Error","code","p","exports","call","length","1","module","Object","defineProperty","value","obj","_createClass","defineProperties","target","props","descriptor","enumerable","configurable","writable","key","Constructor","protoProps","staticProps","prototype","_idb","_idb2","__esModule","default","DBHelper","instance","TypeError","_classCallCheck","this","callback","_this","fetch","API_BASE_URL","then","res","ok","json","data","DB_PROMISE","db","transaction","objectStore","put","get","restaurants","id","restaurant","catch","err","cuisine","fetchRestaurants","error","results","filter","cuisine_type","neighborhood","neighborhoods","map","v","uniqueNeighborhoods","indexOf","cuisines","uniqueCuisines","photograph","marker","L","latlng","lat","lng","title","name","alt","url","urlForRestaurant","addTo","newMap","_this2","reviews","review","restaurant_id","open","upgradeDb","createObjectStore","idb","2","_dbhelper","_dbhelper2","document","addEventListener","event","initMap","fetchNeighborhoods","fetchCuisines","registerServiceWorker","getElementById","updateRestaurants","console","self","fillNeighborhoodsHTML","arguments","undefined","select","forEach","option","createElement","innerHTML","setAttribute","append","fillCuisinesHTML","center","zoom","scrollWheelZoom","tileLayer","mapboxToken","maxZoom","attribution","cSelect","nSelect","cIndex","selectedIndex","nIndex","fetchRestaurantByCuisineAndNeighborhood","resetRestaurants","fillRestaurantsHTML","markers","remove","ul","createRestaurantHTML","addMarkersToMap","li","image","className","src","imageUrlForRestaurant","address","more","href","mapMarkerForRestaurant","on","window","location","options","push","navigator","serviceWorker","register","log","./dbhelper","3","promisifyRequest","request","Promise","resolve","reject","onsuccess","result","onerror","promisifyRequestCall","method","args","apply","proxyProperties","ProxyClass","targetProp","properties","prop","set","val","proxyRequestMethods","proxyMethods","proxyCursorRequestMethods","Cursor","Index","index","_index","cursor","_cursor","_request","ObjectStore","store","_store","Transaction","idbTransaction","_tx","complete","oncomplete","onabort","UpgradeDB","oldVersion","_db","DB","IDBIndex","IDBCursor","methodName","createIndex","IDBObjectStore","IDBTransaction","IDBDatabase","funcName","replace","arr","Array","slice","nativeObject","getAll","query","count","items","iterateCursor","continue","exp","version","upgradeCallback","indexedDB","onupgradeneeded","delete"],"mappings":"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","file":"combined.min.js","sourcesContent":["(function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c=\"function\"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error(\"Cannot find module '\"+i+\"'\");throw a.code=\"MODULE_NOT_FOUND\",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u=\"function\"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()({1:[function(require,module,exports){\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _idb = require('idb');\n\nvar _idb2 = _interopRequireDefault(_idb);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n/**\r\n * Common database helper functions.\r\n */\nvar DBHelper = function () {\n  function DBHelper() {\n    _classCallCheck(this, DBHelper);\n  }\n\n  _createClass(DBHelper, null, [{\n    key: 'fetchRestaurants',\n\n\n    /**\r\n     * Fetch all restaurants.\r\n     */\n    value: function fetchRestaurants(callback) {\n      var _this = this;\n\n      // create IDB object store\n      // let dbPromise = idb.open('restaurant-review', 1, (upgradeDb) => {\n      //   let restaurantStore = upgradeDb.createObjectStore('restaurants');\n      // });\n\n      return fetch(DBHelper.API_BASE_URL + '/restaurants').then(function (res) {\n        if (res.ok) {\n          // store the restaurants from idb when offline\n          return res.json().then(function (data) {\n            return _this.DB_PROMISE.then(function (db) {\n              var tx = db.transaction('restaurants', 'readwrite');\n              var restaurantStore = tx.objectStore('restaurants');\n              restaurantStore.put(data, 'restaurants');\n              return data;\n            });\n          });\n        } else {\n          // const error = (`Request failed. Returned status of ${xhr.status}`);\n          // callback(error, null);\n\n          // get the restaurants from idb when offline\n          _this.DB_PROMISE.then(function (db) {\n            var tx = db.transaction('restaurants');\n            var restaurantStore = tx.objectStore('restaurants');\n            return restaurantStore.get('restaurants');\n          });\n        }\n      }).then(function (restaurants) {\n        callback(null, restaurants);\n      });\n    }\n\n    /**\r\n     * Fetch a restaurant by its ID.\r\n     */\n\n  }, {\n    key: 'fetchRestaurantById',\n    value: function fetchRestaurantById(id, callback) {\n      // fetch all restaurants with proper error handling.\n      // DBHelper.fetchRestaurants((error, restaurants) => {\n      //   if (error) {\n      //     callback(error, null);\n      //   } else {\n      //     const restaurant = restaurants.find(r => r.id == id);\n      //     if (restaurant) { // Got the restaurant\n      //       callback(null, restaurant);\n      //     } else { // Restaurant does not exist in the database\n      //       callback('Restaurant does not exist', null);\n      //     }\n      //   }\n      // });\n\n      fetch(DBHelper.API_BASE_URL + '/restaurants/' + id).then(function (res) {\n        if (res.ok) {\n          return res.json().then(function (restaurant) {\n            if (restaurant) {\n              callback(null, restaurant);\n            } else {\n              callback('Restaurant does not exists', null);\n            }\n          });\n        }\n      }).catch(function (err) {\n        callback(err, null);\n      });\n    }\n\n    /**\r\n     * Fetch restaurants by a cuisine type with proper error handling.\r\n     */\n\n  }, {\n    key: 'fetchRestaurantByCuisine',\n    value: function fetchRestaurantByCuisine(cuisine, callback) {\n      // Fetch all restaurants  with proper error handling\n      DBHelper.fetchRestaurants(function (error, restaurants) {\n        if (error) {\n          callback(error, null);\n        } else {\n          // Filter restaurants to have only given cuisine type\n          var results = restaurants.filter(function (r) {\n            return r.cuisine_type == cuisine;\n          });\n          callback(null, results);\n        }\n      });\n    }\n\n    /**\r\n     * Fetch restaurants by a neighborhood with proper error handling.\r\n     */\n\n  }, {\n    key: 'fetchRestaurantByNeighborhood',\n    value: function fetchRestaurantByNeighborhood(neighborhood, callback) {\n      // Fetch all restaurants\n      DBHelper.fetchRestaurants(function (error, restaurants) {\n        if (error) {\n          callback(error, null);\n        } else {\n          // Filter restaurants to have only given neighborhood\n          var results = restaurants.filter(function (r) {\n            return r.neighborhood == neighborhood;\n          });\n          callback(null, results);\n        }\n      });\n    }\n\n    /**\r\n     * Fetch restaurants by a cuisine and a neighborhood with proper error handling.\r\n     */\n\n  }, {\n    key: 'fetchRestaurantByCuisineAndNeighborhood',\n    value: function fetchRestaurantByCuisineAndNeighborhood(cuisine, neighborhood, callback) {\n      // Fetch all restaurants\n      DBHelper.fetchRestaurants(function (error, restaurants) {\n        if (error) {\n          callback(error, null);\n        } else {\n          var results = restaurants;\n          if (cuisine != 'all') {\n            // filter by cuisine\n            results = results.filter(function (r) {\n              return r.cuisine_type == cuisine;\n            });\n          }\n          if (neighborhood != 'all') {\n            // filter by neighborhood\n            results = results.filter(function (r) {\n              return r.neighborhood == neighborhood;\n            });\n          }\n          callback(null, results);\n        }\n      });\n    }\n\n    /**\r\n     * Fetch all neighborhoods with proper error handling.\r\n     */\n\n  }, {\n    key: 'fetchNeighborhoods',\n    value: function fetchNeighborhoods(callback) {\n      // Fetch all restaurants\n      DBHelper.fetchRestaurants(function (error, restaurants) {\n        if (error) {\n          callback(error, null);\n        } else {\n          // Get all neighborhoods from all restaurants\n          var neighborhoods = restaurants.map(function (v, i) {\n            return restaurants[i].neighborhood;\n          });\n          // Remove duplicates from neighborhoods\n          var uniqueNeighborhoods = neighborhoods.filter(function (v, i) {\n            return neighborhoods.indexOf(v) == i;\n          });\n          callback(null, uniqueNeighborhoods);\n        }\n      });\n    }\n\n    /**\r\n     * Fetch all cuisines with proper error handling.\r\n     */\n\n  }, {\n    key: 'fetchCuisines',\n    value: function fetchCuisines(callback) {\n      // Fetch all restaurants\n      DBHelper.fetchRestaurants(function (error, restaurants) {\n        if (error) {\n          callback(error, null);\n        } else {\n          // Get all cuisines from all restaurants\n          var cuisines = restaurants.map(function (v, i) {\n            return restaurants[i].cuisine_type;\n          });\n          // Remove duplicates from cuisines\n          var uniqueCuisines = cuisines.filter(function (v, i) {\n            return cuisines.indexOf(v) == i;\n          });\n          callback(null, uniqueCuisines);\n        }\n      });\n    }\n\n    /**\r\n     * Restaurant page URL.\r\n     */\n\n  }, {\n    key: 'urlForRestaurant',\n    value: function urlForRestaurant(restaurant) {\n      return './restaurant.html?id=' + restaurant.id;\n    }\n\n    /**\r\n     * Restaurant image URL.\r\n     */\n\n  }, {\n    key: 'imageUrlForRestaurant',\n    value: function imageUrlForRestaurant(restaurant) {\n      return '/img/' + restaurant.photograph + '.jpg';\n    }\n\n    /**\r\n     * Map marker for a restaurant.\r\n     */\n\n  }, {\n    key: 'mapMarkerForRestaurant',\n    value: function mapMarkerForRestaurant(restaurant, map) {\n      // https://leafletjs.com/reference-1.3.0.html#marker  \n      var marker = new L.marker([restaurant.latlng.lat, restaurant.latlng.lng], { title: restaurant.name,\n        alt: restaurant.name,\n        url: DBHelper.urlForRestaurant(restaurant)\n      });\n      marker.addTo(newMap);\n      return marker;\n    }\n    /* static mapMarkerForRestaurant(restaurant, map) {\r\n      const marker = new google.maps.Marker({\r\n        position: restaurant.latlng,\r\n        title: restaurant.name,\r\n        url: DBHelper.urlForRestaurant(restaurant),\r\n        map: map,\r\n        animation: google.maps.Animation.DROP}\r\n      );\r\n      return marker;\r\n    } */\n\n  }, {\n    key: 'fetchReviews',\n    value: function fetchReviews(id) {\n      var _this2 = this;\n\n      // console.log('fetching reviews');\n      return fetch(this.API_BASE_URL + '/reviews/').then(function (res) {\n        if (res.ok) {\n          // store the reviews from idb when offline\n          return res.json().then(function (reviews) {\n            return _this2.DB_PROMISE.then(function (db) {\n              var tx = db.transaction('restaurant-reviews', 'readwrite');\n              var reviewStore = tx.objectStore('restaurant-reviews');\n              reviewStore.put(reviews, 'reviews');\n              // console.log(reviews.filter((review) => review.restaurant_id==id));\n              return reviews.filter(function (review) {\n                return review.restaurant_id == id;\n              });\n            });\n          });\n        } else {\n          // get the restaurants from idb when offline\n          _this2.DB_PROMISE.then(function (db) {\n            var tx = db.transaction('restaurant-reviews');\n            var restaurantStore = tx.objectStore('restaurant-reviews');\n            return restaurantStore.get('reviews').filter(function (review) {\n              return review.restaurant_id == id;\n            });\n          });\n        }\n      });\n    }\n  }, {\n    key: 'API_BASE_URL',\n\n\n    /**\r\n     * Database URL.\r\n     * Change this to restaurants.json file location on your server.\r\n     */\n    get: function get() {\n      var port = 1337; // Change this to your server port\n      return 'http://localhost:' + port;\n    }\n  }, {\n    key: 'DB_PROMISE',\n    get: function get() {\n      // create IDB object store\n      var dbPromise = _idb2.default.open('restaurant-review', 1, function (upgradeDb) {\n        var restaurantStore = upgradeDb.createObjectStore('restaurants');\n        var reviewStore = upgradeDb.createObjectStore('restaurant-reviews');\n      });\n      return dbPromise;\n    }\n  }]);\n\n  return DBHelper;\n}();\n\nexports.default = DBHelper;\n\n},{\"idb\":3}],2:[function(require,module,exports){\n'use strict';\n\nvar _dbhelper = require('./dbhelper');\n\nvar _dbhelper2 = _interopRequireDefault(_dbhelper);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n// import L from 'leaflet';\n\nvar restaurants = void 0,\n    neighborhoods = void 0,\n    cuisines = void 0;\nvar newMap;\nvar markers = [];\n\n/**\r\n * Fetch neighborhoods and cuisines as soon as the page is loaded.\r\n */\ndocument.addEventListener('DOMContentLoaded', function (event) {\n  initMap(); // added \n  fetchNeighborhoods();\n  fetchCuisines();\n  registerServiceWorker();\n  document.getElementById('neighborhoods-select').addEventListener('change', updateRestaurants);\n  document.getElementById('cuisines-select').addEventListener('change', updateRestaurants);\n});\n\n/**\r\n * Fetch all neighborhoods and set their HTML.\r\n */\nvar fetchNeighborhoods = function fetchNeighborhoods() {\n  _dbhelper2.default.fetchNeighborhoods(function (error, neighborhoods) {\n    if (error) {\n      // Got an error\n      console.error(error);\n    } else {\n      self.neighborhoods = neighborhoods;\n      fillNeighborhoodsHTML();\n    }\n  });\n};\n\n/**\r\n * Set neighborhoods HTML.\r\n */\nvar fillNeighborhoodsHTML = function fillNeighborhoodsHTML() {\n  var neighborhoods = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : self.neighborhoods;\n\n  var select = document.getElementById('neighborhoods-select');\n  neighborhoods.forEach(function (neighborhood) {\n    var option = document.createElement('option');\n    option.innerHTML = neighborhood;\n    option.value = neighborhood;\n    option.setAttribute('aria-label', neighborhood);\n    select.append(option);\n  });\n};\n\n/**\r\n * Fetch all cuisines and set their HTML.\r\n */\nvar fetchCuisines = function fetchCuisines() {\n  _dbhelper2.default.fetchCuisines(function (error, cuisines) {\n    if (error) {\n      // Got an error!\n      console.error(error);\n    } else {\n      self.cuisines = cuisines;\n      fillCuisinesHTML();\n    }\n  });\n};\n\n/**\r\n * Set cuisines HTML.\r\n */\nvar fillCuisinesHTML = function fillCuisinesHTML() {\n  var cuisines = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : self.cuisines;\n\n  var select = document.getElementById('cuisines-select');\n\n  cuisines.forEach(function (cuisine) {\n    var option = document.createElement('option');\n    option.innerHTML = cuisine;\n    option.value = cuisine;\n    option.setAttribute('aria-label', cuisine);\n    select.append(option);\n  });\n};\n\n/**\r\n * Initialize leaflet map, called from HTML.\r\n */\nvar initMap = function initMap() {\n  self.newMap = L.map('map', {\n    center: [40.722216, -73.987501],\n    zoom: 12,\n    scrollWheelZoom: false\n  });\n  // console.log(L);\n  L.tileLayer('https://api.tiles.mapbox.com/v4/{id}/{z}/{x}/{y}.jpg70?access_token={mapboxToken}', {\n    mapboxToken: 'pk.eyJ1Ijoia29naW5nIiwiYSI6ImNqcGM4M3oxbTBiczEzcW14anV2NW41MG8ifQ.ERUns5YDJZDSlbusPJoEvw',\n    maxZoom: 18,\n    attribution: 'Map data &copy; <a href=\"https://www.openstreetmap.org/\">OpenStreetMap</a> contributors, ' + '<a href=\"https://creativecommons.org/licenses/by-sa/2.0/\">CC-BY-SA</a>, ' + 'Imagery © <a href=\"https://www.mapbox.com/\">Mapbox</a>',\n    id: 'mapbox.streets'\n  }).addTo(self.newMap);\n\n  updateRestaurants();\n};\n/* window.initMap = () => {\r\n  let loc = {\r\n    lat: 40.722216,\r\n    lng: -73.987501\r\n  };\r\n  self.map = new google.maps.Map(document.getElementById('map'), {\r\n    zoom: 12,\r\n    center: loc,\r\n    scrollwheel: false\r\n  });\r\n  updateRestaurants();\r\n} */\n\n/**\r\n * Update page and map for current restaurants.\r\n */\nvar updateRestaurants = function updateRestaurants() {\n  var cSelect = document.getElementById('cuisines-select');\n  var nSelect = document.getElementById('neighborhoods-select');\n\n  var cIndex = cSelect.selectedIndex;\n  var nIndex = nSelect.selectedIndex;\n\n  var cuisine = cSelect[cIndex].value;\n  var neighborhood = nSelect[nIndex].value;\n\n  _dbhelper2.default.fetchRestaurantByCuisineAndNeighborhood(cuisine, neighborhood, function (error, restaurants) {\n    if (error) {\n      // Got an error!\n      console.error(error);\n    } else {\n      resetRestaurants(restaurants);\n      fillRestaurantsHTML();\n    }\n  });\n};\n\n/**\r\n * Clear current restaurants, their HTML and remove their map markers.\r\n */\nvar resetRestaurants = function resetRestaurants(restaurants) {\n  // Remove all restaurants\n  self.restaurants = [];\n  var ul = document.getElementById('restaurants-list');\n  ul.innerHTML = '';\n\n  // Remove all map markers\n  if (self.markers) {\n    self.markers.forEach(function (marker) {\n      return marker.remove();\n    });\n  }\n  self.markers = [];\n  self.restaurants = restaurants;\n};\n\n/**\r\n * Create all restaurants HTML and add them to the webpage.\r\n */\nvar fillRestaurantsHTML = function fillRestaurantsHTML() {\n  var restaurants = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : self.restaurants;\n\n  var ul = document.getElementById('restaurants-list');\n  restaurants.forEach(function (restaurant) {\n    ul.append(createRestaurantHTML(restaurant));\n  });\n  addMarkersToMap();\n};\n\n/**\r\n * Create restaurant HTML.\r\n */\nvar createRestaurantHTML = function createRestaurantHTML(restaurant) {\n  var li = document.createElement('li');\n\n  var image = document.createElement('img');\n  image.className = 'restaurant-img';\n  image.src = _dbhelper2.default.imageUrlForRestaurant(restaurant);\n  image.alt = 'An image of ' + restaurant.name + ' restaurant';\n  li.append(image);\n\n  var name = document.createElement('h1');\n  name.innerHTML = restaurant.name;\n  li.append(name);\n\n  var neighborhood = document.createElement('p');\n  neighborhood.innerHTML = restaurant.neighborhood;\n  li.append(neighborhood);\n\n  var address = document.createElement('p');\n  address.innerHTML = restaurant.address;\n  li.append(address);\n\n  var more = document.createElement('a');\n  more.innerHTML = 'View Details';\n  more.href = _dbhelper2.default.urlForRestaurant(restaurant);\n  li.append(more);\n\n  return li;\n};\n\n/**\r\n * Add markers for current restaurants to the map.\r\n */\nvar addMarkersToMap = function addMarkersToMap() {\n  var restaurants = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : self.restaurants;\n\n  restaurants.forEach(function (restaurant) {\n    // Add marker to the map\n    var marker = _dbhelper2.default.mapMarkerForRestaurant(restaurant, self.newMap);\n    marker.on(\"click\", onClick);\n    function onClick() {\n      window.location.href = marker.options.url;\n    }\n    self.markers.push(marker);\n  });\n};\n/* addMarkersToMap = (restaurants = self.restaurants) => {\r\n  restaurants.forEach(restaurant => {\r\n    // Add marker to the map\r\n    const marker = DBHelper.mapMarkerForRestaurant(restaurant, self.map);\r\n    google.maps.event.addListener(marker, 'click', () => {\r\n      window.location.href = marker.url\r\n    });\r\n    self.markers.push(marker);\r\n  });\r\n} */\n\n// Service worker registration\nvar registerServiceWorker = function registerServiceWorker() {\n  if (!navigator.serviceWorker) {\n    return;\n  }\n\n  navigator.serviceWorker.register('../sw.js').then(function () {\n    console.log('Service worker has been registered!');\n  }).catch(function (err) {\n    console.log('Error occured while registering service worker!' + err);\n  });\n};\n\n},{\"./dbhelper\":1}],3:[function(require,module,exports){\n'use strict';\n\n(function() {\n  function toArray(arr) {\n    return Array.prototype.slice.call(arr);\n  }\n\n  function promisifyRequest(request) {\n    return new Promise(function(resolve, reject) {\n      request.onsuccess = function() {\n        resolve(request.result);\n      };\n\n      request.onerror = function() {\n        reject(request.error);\n      };\n    });\n  }\n\n  function promisifyRequestCall(obj, method, args) {\n    var request;\n    var p = new Promise(function(resolve, reject) {\n      request = obj[method].apply(obj, args);\n      promisifyRequest(request).then(resolve, reject);\n    });\n\n    p.request = request;\n    return p;\n  }\n\n  function promisifyCursorRequestCall(obj, method, args) {\n    var p = promisifyRequestCall(obj, method, args);\n    return p.then(function(value) {\n      if (!value) return;\n      return new Cursor(value, p.request);\n    });\n  }\n\n  function proxyProperties(ProxyClass, targetProp, properties) {\n    properties.forEach(function(prop) {\n      Object.defineProperty(ProxyClass.prototype, prop, {\n        get: function() {\n          return this[targetProp][prop];\n        },\n        set: function(val) {\n          this[targetProp][prop] = val;\n        }\n      });\n    });\n  }\n\n  function proxyRequestMethods(ProxyClass, targetProp, Constructor, properties) {\n    properties.forEach(function(prop) {\n      if (!(prop in Constructor.prototype)) return;\n      ProxyClass.prototype[prop] = function() {\n        return promisifyRequestCall(this[targetProp], prop, arguments);\n      };\n    });\n  }\n\n  function proxyMethods(ProxyClass, targetProp, Constructor, properties) {\n    properties.forEach(function(prop) {\n      if (!(prop in Constructor.prototype)) return;\n      ProxyClass.prototype[prop] = function() {\n        return this[targetProp][prop].apply(this[targetProp], arguments);\n      };\n    });\n  }\n\n  function proxyCursorRequestMethods(ProxyClass, targetProp, Constructor, properties) {\n    properties.forEach(function(prop) {\n      if (!(prop in Constructor.prototype)) return;\n      ProxyClass.prototype[prop] = function() {\n        return promisifyCursorRequestCall(this[targetProp], prop, arguments);\n      };\n    });\n  }\n\n  function Index(index) {\n    this._index = index;\n  }\n\n  proxyProperties(Index, '_index', [\n    'name',\n    'keyPath',\n    'multiEntry',\n    'unique'\n  ]);\n\n  proxyRequestMethods(Index, '_index', IDBIndex, [\n    'get',\n    'getKey',\n    'getAll',\n    'getAllKeys',\n    'count'\n  ]);\n\n  proxyCursorRequestMethods(Index, '_index', IDBIndex, [\n    'openCursor',\n    'openKeyCursor'\n  ]);\n\n  function Cursor(cursor, request) {\n    this._cursor = cursor;\n    this._request = request;\n  }\n\n  proxyProperties(Cursor, '_cursor', [\n    'direction',\n    'key',\n    'primaryKey',\n    'value'\n  ]);\n\n  proxyRequestMethods(Cursor, '_cursor', IDBCursor, [\n    'update',\n    'delete'\n  ]);\n\n  // proxy 'next' methods\n  ['advance', 'continue', 'continuePrimaryKey'].forEach(function(methodName) {\n    if (!(methodName in IDBCursor.prototype)) return;\n    Cursor.prototype[methodName] = function() {\n      var cursor = this;\n      var args = arguments;\n      return Promise.resolve().then(function() {\n        cursor._cursor[methodName].apply(cursor._cursor, args);\n        return promisifyRequest(cursor._request).then(function(value) {\n          if (!value) return;\n          return new Cursor(value, cursor._request);\n        });\n      });\n    };\n  });\n\n  function ObjectStore(store) {\n    this._store = store;\n  }\n\n  ObjectStore.prototype.createIndex = function() {\n    return new Index(this._store.createIndex.apply(this._store, arguments));\n  };\n\n  ObjectStore.prototype.index = function() {\n    return new Index(this._store.index.apply(this._store, arguments));\n  };\n\n  proxyProperties(ObjectStore, '_store', [\n    'name',\n    'keyPath',\n    'indexNames',\n    'autoIncrement'\n  ]);\n\n  proxyRequestMethods(ObjectStore, '_store', IDBObjectStore, [\n    'put',\n    'add',\n    'delete',\n    'clear',\n    'get',\n    'getAll',\n    'getKey',\n    'getAllKeys',\n    'count'\n  ]);\n\n  proxyCursorRequestMethods(ObjectStore, '_store', IDBObjectStore, [\n    'openCursor',\n    'openKeyCursor'\n  ]);\n\n  proxyMethods(ObjectStore, '_store', IDBObjectStore, [\n    'deleteIndex'\n  ]);\n\n  function Transaction(idbTransaction) {\n    this._tx = idbTransaction;\n    this.complete = new Promise(function(resolve, reject) {\n      idbTransaction.oncomplete = function() {\n        resolve();\n      };\n      idbTransaction.onerror = function() {\n        reject(idbTransaction.error);\n      };\n      idbTransaction.onabort = function() {\n        reject(idbTransaction.error);\n      };\n    });\n  }\n\n  Transaction.prototype.objectStore = function() {\n    return new ObjectStore(this._tx.objectStore.apply(this._tx, arguments));\n  };\n\n  proxyProperties(Transaction, '_tx', [\n    'objectStoreNames',\n    'mode'\n  ]);\n\n  proxyMethods(Transaction, '_tx', IDBTransaction, [\n    'abort'\n  ]);\n\n  function UpgradeDB(db, oldVersion, transaction) {\n    this._db = db;\n    this.oldVersion = oldVersion;\n    this.transaction = new Transaction(transaction);\n  }\n\n  UpgradeDB.prototype.createObjectStore = function() {\n    return new ObjectStore(this._db.createObjectStore.apply(this._db, arguments));\n  };\n\n  proxyProperties(UpgradeDB, '_db', [\n    'name',\n    'version',\n    'objectStoreNames'\n  ]);\n\n  proxyMethods(UpgradeDB, '_db', IDBDatabase, [\n    'deleteObjectStore',\n    'close'\n  ]);\n\n  function DB(db) {\n    this._db = db;\n  }\n\n  DB.prototype.transaction = function() {\n    return new Transaction(this._db.transaction.apply(this._db, arguments));\n  };\n\n  proxyProperties(DB, '_db', [\n    'name',\n    'version',\n    'objectStoreNames'\n  ]);\n\n  proxyMethods(DB, '_db', IDBDatabase, [\n    'close'\n  ]);\n\n  // Add cursor iterators\n  // TODO: remove this once browsers do the right thing with promises\n  ['openCursor', 'openKeyCursor'].forEach(function(funcName) {\n    [ObjectStore, Index].forEach(function(Constructor) {\n      // Don't create iterateKeyCursor if openKeyCursor doesn't exist.\n      if (!(funcName in Constructor.prototype)) return;\n\n      Constructor.prototype[funcName.replace('open', 'iterate')] = function() {\n        var args = toArray(arguments);\n        var callback = args[args.length - 1];\n        var nativeObject = this._store || this._index;\n        var request = nativeObject[funcName].apply(nativeObject, args.slice(0, -1));\n        request.onsuccess = function() {\n          callback(request.result);\n        };\n      };\n    });\n  });\n\n  // polyfill getAll\n  [Index, ObjectStore].forEach(function(Constructor) {\n    if (Constructor.prototype.getAll) return;\n    Constructor.prototype.getAll = function(query, count) {\n      var instance = this;\n      var items = [];\n\n      return new Promise(function(resolve) {\n        instance.iterateCursor(query, function(cursor) {\n          if (!cursor) {\n            resolve(items);\n            return;\n          }\n          items.push(cursor.value);\n\n          if (count !== undefined && items.length == count) {\n            resolve(items);\n            return;\n          }\n          cursor.continue();\n        });\n      });\n    };\n  });\n\n  var exp = {\n    open: function(name, version, upgradeCallback) {\n      var p = promisifyRequestCall(indexedDB, 'open', [name, version]);\n      var request = p.request;\n\n      if (request) {\n        request.onupgradeneeded = function(event) {\n          if (upgradeCallback) {\n            upgradeCallback(new UpgradeDB(request.result, event.oldVersion, request.transaction));\n          }\n        };\n      }\n\n      return p.then(function(db) {\n        return new DB(db);\n      });\n    },\n    delete: function(name) {\n      return promisifyRequestCall(indexedDB, 'deleteDatabase', [name]);\n    }\n  };\n\n  if (typeof module !== 'undefined') {\n    module.exports = exp;\n    module.exports.default = module.exports;\n  }\n  else {\n    self.idb = exp;\n  }\n}());\n\n},{}]},{},[2]);\n"]}